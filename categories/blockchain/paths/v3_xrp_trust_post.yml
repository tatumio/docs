description: '<h4>10 credits per API call.</h4><br/><p>

  <p>Create / Update / Delete XRP trust line between accounts to transfer private
  assets.

  By creating trustline for the first time, the asset is created automatically and
  can be used in the transactions.<br/>

  Account setting rippling must be enabled on the issuer account before the trust
  line creation to asset work correctly.

  Creating a trust line will cause an additional 5 XRP to be blocked on the account.<br/><br/>

  This operation needs the private key of the blockchain address. Every time the funds
  are transferred, the transaction must be signed with the corresponding private key.

  No one should ever send it''s own private keys to the internet because there is
  a strong possibility of stealing keys and loss of funds. In this method, it is possible
  to enter privateKey

  or signatureId. PrivateKey should be used only for quick development on testnet
  versions of blockchain when there is no risk of losing funds. In production,

  <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should
  be used for the highest security standards, and signatureId should be present in
  the request.

  Alternatively, using the Tatum client library for supported languages.</p>

  '
operationId: XrpTrustLineBlockchain
requestBody:
  content:
    application/json:
      schema:
        oneOf:
        - $ref: '../../../components/migrated.yml#/components/schemas/TrustLineXrpBlockchain'
        - $ref: '../../../components/migrated.yml#/components/schemas/TrustLineXrpBlockchainKMS'
  required: true
responses:
  '200':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/TransactionHash'
          - $ref: '../../../components/migrated.yml#/components/schemas/SignatureId'
    description: OK
  '400':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error400'
    description: Bad Request. Validation failed for the given object in the HTTP Body
      or Request parameters.
  '401':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401NotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401Invalid'
    description: Unauthorized. Not valid or inactive subscription key present in the
      HTTP Header.
  '403':
    description: Forbidden. The request is authenticated, but it is not possible to
      required perform operation due to logical error or invalid permissions.
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403XrpFailed'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403XrpBroadcast'
  '500':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error500'
    description: Internal server error. There was an error on the server while processing
      the request.
security:
- X-API-Key: []
x-codeSamples: []
summary: Create / Update / Delete XRP trust line
tags:
- XRP
