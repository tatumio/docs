components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: t-645a26e22d0761001c811c84-645a26e32d0761001c811c8a
security:
  - ApiKeyAuth: []

info:
  title: Data API
  version: "1.0.0"
openapi: 3.0.3
paths:
  /v3/data/owners:
    get:
      description: >
        <p><b>20 credits per API call</b></p>

        <p>Get all addresses that own your favorite token (ERC-20, ERC-721 or
        ERC-1155)! Our API lets you search for all token owners on:</p>

        <ul>

        <li>Celo - celo / celo-testnet</li>

        <li>Ethereum - ethereum / ethereum-sepolia</li>

        <li>BNB (Binance) Smart Chain - bsc / bsc-testnet</li>

        <li>Polygon - polygon / polygon-mumbai</li>

        <li>Horizen EON - eon-mainnet</li>

        <li>Chiliz - chiliz-mainnet</li>

        </ul>

        <p>To get started:</p>

        <ul>

        <li>Provide a chain name and address of any fungible token, NFT or
        multitoken collection. Our API will return a list of addresses of all of
        their owners.</li>

        <li>You can also get an owner of a specific NFT by specifying
        <code>tokenId</code>. In case of multitoken, result is an array of
        addresses.</li>

        </ul>
      operationId: GetOwners
      parameters:
        - description: The blockchain to work with.
          in: query
          name: chain
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/ChainEnum"
        - description: >-
            The blockchain address of the token (NFT collection or any fungible
            token).
          in: query
          name: tokenAddress
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/TokenAddress"
        - description: The ID of a specific NFT token.
          in: query
          name: tokenId
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/TokenId"
        - description: The number of items per page (default is 50).
          in: query
          name: pageSize
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/PageSize"
        - description: The offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/Offset"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                description: >-
                  List of all addresses that own a token in a specified
                  collection.
                example:
                  - "0x0bbf9f25c863fdf19e645c96280004d24f43cb38"
                  - "0x0bd1b3b12db943f2310a4e53481ae97f8b6c2a75"
                  - "0x281f4727081ab4a066f321fd6fc8dd0dc063e9fd"
                  - "0x681cbae1c41e5eec8411dd8e009fa71f81d03f7f"
                  - "0x7b49a05c15702bbe1db534058ebcc9e950c474ca"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error400"
          description: >-
            Bad Request. Validation failed for the given object in the HTTP Body
            or Request parameters.
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            required perform operation due to logical error or invalid
            permissions.
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error403"
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server during the
            processing of the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Get owners of a token
      tags:
        - Token API

  /v3/data/tokens:
    get:
      description: >
        <p><b>1 credit per API call</b></p>

        <p>Get information about your favorite token! Our API lets you search
        for all tokens on:</p>

        <ul>

        <li>Celo - celo / celo-testnet</li>

        <li>Ethereum - ethereum / ethereum-sepolia</li>

        <li>BNB (Binance) Smart Chain - bsc / bsc-testnet</li>

        <li>Polygon - polygon / polygon-mumbai</li>

        <li>Horizen EON - eon-mainnet</li>

        <li>Chiliz - chiliz-mainnet</li>

        <li>Tezos - tezos-mainnet</li>

        </ul>

        <p>To get started:</p>

        <ul>

        <li>Provide a chain and address of any fungible token, NFT or multitoken
        collection. If available, our API will return information about them
        such as their name, symbol, supply, and more.</li>

        <li>You can also get extra infomation (such as metadata) of a specific
        NFT or multitoken by passing <code>tokenId</code> as a query
        parameter.</li>

        </ul>
      operationId: GetTokens
      parameters:
        - description: The blockchain to work with.
          in: query
          name: chain
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/ChainEnum"
        - description: >-
            The blockchain address of the token (NFT collection or any fungible
            token).
          in: query
          name: tokenAddress
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/TokenAddress"
        - description: The ID of a specific NFT token.
          in: query
          name: tokenId
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/TokenId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/FungibleInfo"
                  - $ref: "../../../components/schemas.yml#/components/schemas/NftInfo"
                  - $ref: "../../../components/schemas.yml#/components/schemas/MultitokenInfo"
                  - $ref: "../../../components/schemas.yml#/components/schemas/NftTokenInfo"
                  - $ref: "../../../components/schemas.yml#/components/schemas/NftInfoTezos"
                  - $ref: "../../../components/schemas.yml#/components/schemas/FungibleInfoTezos"
                description: >
                  Information about specific collection or token

                  (not all fields are available for every token, e.g. some
                  multitokens do not have name and symbol).
                example:
                  name: BeefyCollectibles
                  symbol: RareItem
                  tokenType: nft
                  metadataURI: QmYrUYv3kCXsrbs8YGguwZkyyMgGkgdQpbse8dZrDaruy5
                  metadata:
                    name: Cowmmunity Ambassador
                    description: >-
                      Represents one of the most important roles in any
                      civilization, as on him depends the molding of the
                      community.
                    image: QmbNsFNDCRYnswu5rtjTPNPkkn8y23DCXVkebrsx2b9fjg
                  supply: "13"
        "400":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error400"
          description: >-
            Bad Request. Validation failed for the given object in the HTTP Body
            or Request parameters.
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            required perform operation due to logical error or invalid
            permissions.
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error403"
        "404":
          description: Collection or token not found.
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: data-api.token
                    example: data-api.token
                    type: string
                  message:
                    description: Collection or token not found on chain ${chain}.
                    example: Collection or token not found on chain bsc-mainnet.
                    type: string
                  statusCode:
                    description: "404"
                    example: 404
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server during the
            processing of the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Get information about collection or token
      tags:
        - Token API

servers:
  - url: https://api.tatum.io/
