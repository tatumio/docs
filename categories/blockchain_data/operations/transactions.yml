components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: t-645a26e22d0761001c811c84-645a26e32d0761001c811c8a
security:
  - ApiKeyAuth: []

info:
  title: Data API
  version: "1.0.0"
openapi: 3.0.3
paths:
  /v3/data/transactions:
    get:
      description: >
        <p><b>20 credits per API call</b></p>

        <p>Get transactions on the following blockchains:</p>

        <ul>

        <li>Celo - celo / celo-testnet</li>

        <li>Ethereum - ethereum / ethereum-sepolia</li>

        <li>BNB (Binance) Smart Chain - bsc / bsc-testnet</li>

        <li>Polygon - polygon / polygon-mumbai</li>

        <li>Tezos - tezos-mainnet</li>

        <li>Horizen EON - eon-mainnet</li>

        <li>Chiliz - chiliz-mainnet</li>

        </ul>

        <p>To get started:</p>

        <ul>

        <li>Provide a chain name and comma-separated list of addresses. Our API
        will return all of their transactions along with further information
        such as their block number, ID of involved token, and more.</li>

        <li>If not specified, the API returns transactions of various types
        (fungible, nft, multitoken, native), but you can also choose to filter
        specific <code>transactionTypes</code> and even
        <code>transactionSubtype</code> (incoming, outgoing,
        zero-transfer).</li>

        <li>On top of that, you can add further filters such as specifying block
        range where the transactions should have occurred, or address and ID of
        involved tokens.</li>

        <li>For Tezos blockchain, the API accepts only one wallet address in
        <code>addresses</code> query parameter. Following query parameters won't
        have any effect on filtering data: <code>transactionTypes</code>,
        <code>transactionSubtype</code>, <code>tokenId</code>,
        <code>blockTo</code>.</li>

        <li>When querying Tezos transactions for a specified wallet or contract
        address, pagination is supported via <code>pageSize</code> and
        <code>offset</code> query parameters. 

        <li>When querying Tezos transactions for a specified block, pagination
        is supported via <code>cursor</code> query parameter, by filling in the
        value from <code>prevPage</code> or <code>nextPage</code> field in the
        response body.</li>

        </ul>
      operationId: GetTransactions
      parameters:
        - description: The blockchain to work with.
          in: query
          name: chain
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/ChainEnumExtended"
        - description: >
            The blockchain public wallet addresses.

            It is possible to enter list of up to 10 addresses as a comma
            separated string.
          in: query
          name: addresses
          required: false
          schema:
            type: string
            example: "0x2474a7227877f2b65185f09468af7c6577fa207c"
        - description: >
            The option to filter transaction based on types.

            It is possible to enter list of multiple types as a comma separated
            string.

            Use fungible (ERC-20), nft (ERC-721 and ERC-1155), multitoken
            (ERC-1155) or native.
          in: query
          name: transactionTypes
          schema:
            type: string
            example: fungible,nft
            enum:
              - fungible
              - nft
              - multitoken
              - native
        - description: The option to filter transaction based on subtype.
          in: query
          name: transactionSubtype
          schema:
            type: string
            example: incoming
            enum:
              - incoming
              - outgoing
              - zero-transfer
        - description: Address of a token (smart contract).
          in: query
          name: tokenAddress
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/TokenAddress"
        - description: ID of a token.
          in: query
          name: tokenId
          required: false
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/TokenId"
        - description: Transactions from this block onwards will be included.
          in: query
          name: blockFrom
          required: false
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/BlockNumber"
        - description: Transactions up to this block will be included.
          in: query
          name: blockTo
          required: false
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/BlockNumberTo"
        - description: The number of items per page (default is 50).
          in: query
          name: pageSize
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/PageSize"
        - description: The offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/Offset"
        - description: >-
            The cursor to obtain previous page or next page of the data.
            Available only for Tezos blockchain.
          in: query
          name: cursor
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/Cursor"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    description: List of all selected transactions.
                    items:
                      $ref: "../../../components/schemas.yml#/components/schemas/TxData"
                    example:
                      - chain: ethereum-mainnet
                        hash: >-
                          0x549447710026cef714da21fb29cbfae1f689bd3246f2fa0a5081149c4aeb3bb3
                        address: "0xdef1c0ded9bec7f1a1670819833240f027b25eff"
                        blockNumber: 16819465
                        transactionIndex: 84
                        transactionType: fungible
                        transactionSubtype: incoming
                        amount: "0.990923706372082143"
                        timestamp: 1678715303000
                        tokenAddress: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                        counterAddress: "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"
                      - chain: ethereum-mainnet
                        hash: >-
                          0x549447710026cef714da21fb29cbfae1f689bd3246f2fa0a5081149c4aeb3bb3
                        address: "0xdef1c0ded9bec7f1a1670819833240f027b25eff"
                        blockNumber: 16819465
                        transactionIndex: 84
                        transactionType: native
                        transactionSubtype: zero-transfer
                        amount: "0"
                        timestamp: 1678715303000
                        counterAddress: "0xd841e3d110cbe4aedb04c9dcc3572ec306bda2f9"
                      - chain: ethereum-mainnet
                        hash: >-
                          0x4e0268c1e67575fd09047e006dd5ad26df402d85fa159e10639e9ea7c2d428f7
                        address: "0x0000000000000000000000000000000000000000"
                        blockNumber: 16819465
                        transactionIndex: 119
                        transactionType: nft
                        transactionSubtype: outgoing
                        amount: "-1"
                        timestamp: 1678715303000
                        tokenId: "33"
                        tokenAddress: "0x3bcad8a734e923133d2c8c3fd4747d47e12d4f79"
                        counterAddress: "0x84300dcc7ca9cf447e886fa17c11fa22557d1af0"
                  prevPage:
                    type: string
                    description: >-
                      Cursor pagination, used to get previous page of results
                      (only relevant for Tezos).
                    example: KtYxNTQ3MHwyNDV8cHJldgs=
                  nextPage:
                    type: string
                    description: >-
                      Cursor pagination, used to get next page of results (only
                      relevant for Tezos).
                    example: MzYxNTQ3MHwyNDV8cHJldg==
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error400"
          description: >-
            Bad Request. Validation failed for the given object in the HTTP Body
            or Request parameters.
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            required perform operation due to logical error or invalid
            permissions.
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error403"
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server during the
            processing of the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Get transactions
      tags:
        - Transactions API

  /v3/data/transactions/hash:
    get:
      description: >
        <p><b>5 credits per API call</b></p>

        <p>Get transactions by hash on the following blockchains:</p>

        <ul>

        <li>Celo - celo / celo-testnet</li>

        <li>Ethereum - ethereum / ethereum-sepolia</li>

        <li>BNB (Binance) Smart Chain - bsc / bsc-testnet</li>

        <li>Polygon - polygon / polygon-mumbai</li>

        <li>Tezos - tezos-mainnet</li>

        <li>Horizen EON - eon-mainnet</li>

        <li>Chiliz - chiliz-mainnet</li>

        </ul>

        <p>To get started:</p>

        <ul>

        <li>Provide a chain name and transaction hash, and our API will return a
        list of transactions with that hash.</li>

        <li>The response will contain all the relevant information about
        specified transactions such as their block number, IDs of involved
        token, and more.</li>

        </ul>
      operationId: GetTransactionsByHash
      parameters:
        - description: The blockchain to work with.
          in: query
          name: chain
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/ChainEnumExtended"
        - description: Hash of the transaction.
          in: query
          name: hash
          required: true
          schema:
            type: string
            example: "0xd49f8d6544f2822522886a02f4787a56ea93bbd636bfdf81d6795a10553d7118"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                description: Selected transaction.
                items:
                  $ref: "../../../components/schemas.yml#/components/schemas/TxData"
                example:
                  - chain: ethereum-mainnet
                    hash: >-
                      0xd49f8d6544f2822522886a02f4787a56ea93bbd636bfdf81d6795a10553d7118
                    address: "0x9757f2d2b135150bbeb65308d4a91804107cd8d6"
                    blockNumber: 16410533
                    transactionIndex: 139
                    transactionType: native
                    transactionSubtype: incoming
                    amount: "0.000000000000000039"
                    timestamp: 1673765531000
                    counterAddress: "0x47405b78a7f381842c4f3d6b2d630dc390f3de9f"
                  - chain: ethereum-mainnet
                    hash: >-
                      0xd49f8d6544f2822522886a02f4787a56ea93bbd636bfdf81d6795a10553d7118
                    address: "0x47405b78a7f381842c4f3d6b2d630dc390f3de9f"
                    blockNumber: 16410533
                    transactionIndex: 139
                    transactionType: native
                    transactionSubtype: outgoing
                    amount: "-0.000000000000000039"
                    timestamp: 1673765531000
                    counterAddress: "0x9757f2d2b135150bbeb65308d4a91804107cd8d6"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error400"
          description: >-
            Bad Request. Validation failed for the given object in the HTTP Body
            or Request parameters.
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            required perform operation due to logical error or invalid
            permissions.
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error403"
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server during the
            processing of the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Get transactions by hash
      tags:
        - Transactions API

  /v3/blockchain/fee/{chain}:
    get:
      description: >
        <p><b>1 credit per API call</b></p>

        <p>Get the recommended fee/gas price for a blockchain.</p>

        <p>Fee is in satoshis(meaning currency(BTC, DOGE,... / 100 000 000) per
        byte

        <p>This API is supported for the following blockchains:</p>

        <ul>

        <li>Bitcoin</li>

        <li>Dogecoin</li>

        <li>Ethereum</li>

        <li>Litecoin</li>

        </ul>
      operationId: getBlockchainFee
      parameters:
        - description: Chain
          in: path
          name: chain
          required: true
          schema:
            type: string
            example: BTC
            enum:
              - ETH
              - BTC
              - LTC
              - DOGE
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/BlockchainFee"
          description: OK
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            required perform operation due to logical error or invalid
            permissions.
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server while
            processing the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Get the recommended fee/gas price for a blockchain
      tags:
        - Transactions API

  /v3/blockchain/estimate:
    post:
      description: |
        <p><b>10 credits per API call</b></p>
        <p>Estimate the current fee for different types of transactions.</p>
        <p>This API is supported for the following blockchains:</p>
        <ul>
        <li>Bitcoin</li>
        <li>BNB Smart Chain</li>
        <li>Celo</li>
        <li>Dogecoin</li>
        <li>Ethereum</li>
        <li>Harmony</li>
        <li>Klaytn</li>
        <li>Litecoin</li>
        <li>Polygon</li>
        <li>XinFin</li>
        </ul>
      operationId: EstimateFeeBlockchain
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "../../../components/schemas.yml#/components/schemas/EstimateFee"
                - $ref: "../../../components/schemas.yml#/components/schemas/EstimateFeeBatchMintNft"
                - $ref: "../../../components/schemas.yml#/components/schemas/EstimateFeeDeployCustodialWallet"
                - $ref: "../../../components/schemas.yml#/components/schemas/EstimateFeeTransferFromCustodial"
                - $ref: "../../../components/schemas.yml#/components/schemas/EstimateFeeFromAddress"
                - $ref: "../../../components/schemas.yml#/components/schemas/EstimateFeeFromUTXO"
        required: true
      responses:
        "200":
          headers:
            x-current-block:
              schema:
                type: number
                example: 15632152
              description: Current block of the blockchain.
            x-current-block-time:
              schema:
                type: string
                format: date-time
                example: "2021-11-11T11:54:49.000Z"
              description: Current block time.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/FeeBtcBased"
                  - $ref: "../../../components/schemas.yml#/components/schemas/FeeEvmBased"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error400"
          description: >-
            Bad Request. Validation failed for the given object in the HTTP Body
            or Request parameters.
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            perform the required operation due to a logical error or invalid
            permissions.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error403"
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server while
            processing the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Estimate the fee for a transaction on a blockchain
      tags:
        - Transactions API

servers:
  - url: https://api.tatum.io/
