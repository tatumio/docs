components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: t-645a26e22d0761001c811c84-645a26e32d0761001c811c8a
security:
  - ApiKeyAuth: []

info:
  title: Data API
  version: "1.0.0"
openapi: 3.0.3
paths:
  /v3/data/balances:
    get:
      description: >
        <p><b>50 credits per API call</b></p>

        <p>Get balances of fungible tokens (ERC-20), NFTs (ERC-721 and ERC-1155)
        or multitokens (ERC-1155 only) for a specific wallet address on the
        following blockchains:</p>

        <ul>

        <li>Celo - celo / celo-testnet</li>

        <li>Ethereum - ethereum / ethereum-sepolia</li>

        <li>BNB (Binance) Smart Chain - bsc / bsc-testnet</li>

        <li>Polygon - polygon / polygon-mumbai</li>

        <li>Tezos - tezos-mainnet</li>

        <li>Horizen EON - eon-mainnet</li>

        <li>Chiliz - chiliz-mainnet</li>

        </ul>

        <p>To get started:</p>

        <ul>

        <li>Provide a chain name and comma-separated list of addresses. Our API
        will return balances of each token along with further information such
        as its type, id, and more.</li>

        <li>Aside from relevant information about each token and its balance,
        the response also contains metadata (they can, however, be excluded by
        setting <code>excludeMetadata</code> to <code>true</code>).</li>

        <li>If not specified, the API returns balances for all supported types
        of tokens (fungible tokens, nft, multitokens), but you can also choose
        to filter specific <code>tokenTypes</code>.</li>

        <li>For Tezos blockchain, the API returns balance of any tokens
        including native token (XTZ) for specified wallet addresses. Following
        query parameters won't have any effect on filtering data
        <code>excludeMetadata</code>.</li>

        </ul>
      operationId: GetBalances
      parameters:
        - description: The blockchain to work with.
          in: query
          name: chain
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/ChainEnumExtended"
        - description: >
            The blockchain public wallet addresses.

            It is possible to enter list of up to 10 addresses as a comma
            separated string.
          in: query
          name: addresses
          required: true
          schema:
            type: string
            description: Wallet address
            example: >-
              0x80d8bac9a6901698b3749fe336bbd1385c1f98f2,0xAe680Ed83baF08a8028118Bd19859F8a0E744cc6
        - description: >
            The option to select only specific token types.

            It is possible to enter list of multiple types as a comma separated
            string.

            Use fungible (ERC-20), nft (includes ERC-721 and ERC-1155) or
            multitoken (ERC-1155 only).
          in: query
          name: tokenTypes
          schema:
            type: string
            example: nft,multitoken
            enum:
              - nft
              - multitoken
              - fungible
        - description: The option to exclude metadata from the response.
          in: query
          name: excludeMetadata
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/ExcludeMetadata"
        - description: The number of items per page (default is 50).
          in: query
          name: pageSize
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/PageSize"
        - description: The offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/Offset"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "../../../components/schemas.yml#/components/schemas/BalanceItem"
                    description: List of all balances for all selected tokens.
                    example:
                      - chain: ethereum-mainnet
                        address: "0xae680ed83baf08a8028118bd19859f8a0e744cc6"
                        balance: "283333333333333333333"
                        tokenAddress: "0x45dd18c5e0fa701abff449f6542aa53e258710b4"
                        lastUpdatedBlockNumber: 14792747
                        type: fungible
                      - chain: ethereum-mainnet
                        address: "0xae680ed83baf08a8028118bd19859f8a0e744cc6"
                        balance: "8690000000000000000"
                        tokenAddress: "0x090f21a84a0e9674c1828aca1db69ec8ae1454e8"
                        lastUpdatedBlockNumber: 15204015
                        type: fungible
                      - chain: ethereum-mainnet
                        address: "0xae680ed83baf08a8028118bd19859f8a0e744cc6"
                        balance: "1"
                        tokenAddress: "0xa58b5224e2fd94020cb2837231b2b0e4247301a6"
                        lastUpdatedBlockNumber: 15326272
                        type: multitoken
                        tokenId: "2605"
                        metadataURI: https://www.cryptovoxels.com/c/1/2605
                        metadata:
                          url: https://www.cryptovoxels.com/c/1/2605
                          name: Link Marine Helmet
                          description: >-
                            Chainlink Marine Helmet, give Sergey Nazarov your
                            love.
                  prevPage:
                    type: string
                    description: >-
                      Cursor pagination, used to get previous page of results
                      (work in progress, not used right now).
                    example: ""
                  nextPage:
                    type: string
                    description: >-
                      Cursor pagination, used to get next page of results (work
                      in progress, not used right now).
                    example: ""
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error400"
          description: >-
            Bad Request. Validation failed for the given object in the HTTP Body
            or Request parameters.
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            required perform operation due to logical error or invalid
            permissions.
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error403"
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server during the
            processing of the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Get balances of addresses
      tags:
        - Wallet API

  /v3/data/transactions:
    get:
      description: >
        <p><b>20 credits per API call</b></p>

        <p>Get transactions on the following blockchains:</p>

        <ul>

        <li>Celo - celo / celo-testnet</li>

        <li>Ethereum - ethereum / ethereum-sepolia</li>

        <li>BNB (Binance) Smart Chain - bsc / bsc-testnet</li>

        <li>Polygon - polygon / polygon-mumbai</li>

        <li>Tezos - tezos-mainnet</li>

        <li>Horizen EON - eon-mainnet</li>

        <li>Chiliz - chiliz-mainnet</li>

        </ul>

        <p>To get started:</p>

        <ul>

        <li>Provide a chain name and comma-separated list of addresses. Our API
        will return all of their transactions along with further information
        such as their block number, ID of involved token, and more.</li>

        <li>If not specified, the API returns transactions of various types
        (fungible, nft, multitoken, native), but you can also choose to filter
        specific <code>transactionTypes</code> and even
        <code>transactionSubtype</code> (incoming, outgoing,
        zero-transfer).</li>

        <li>On top of that, you can add further filters such as specifying block
        range where the transactions should have occurred, or address and ID of
        involved tokens.</li>

        <li>For Tezos blockchain, the API accepts only one wallet address in
        <code>addresses</code> query parameter. Following query parameters won't
        have any effect on filtering data: <code>transactionTypes</code>,
        <code>transactionSubtype</code>, <code>tokenId</code>,
        <code>blockTo</code>.</li>

        <li>When querying Tezos transactions for a specified wallet or contract
        address, pagination is supported via <code>pageSize</code> and
        <code>offset</code> query parameters. 

        <li>When querying Tezos transactions for a specified block, pagination
        is supported via <code>cursor</code> query parameter, by filling in the
        value from <code>prevPage</code> or <code>nextPage</code> field in the
        response body.</li>

        </ul>
      operationId: GetTransactions
      parameters:
        - description: The blockchain to work with.
          in: query
          name: chain
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/ChainEnumExtended"
        - description: >
            The blockchain public wallet addresses.

            It is possible to enter list of up to 10 addresses as a comma
            separated string.
          in: query
          name: addresses
          required: false
          schema:
            type: string
            example: "0x2474a7227877f2b65185f09468af7c6577fa207c"
        - description: >
            The option to filter transaction based on types.

            It is possible to enter list of multiple types as a comma separated
            string.

            Use fungible (ERC-20), nft (ERC-721 and ERC-1155), multitoken
            (ERC-1155) or native.
          in: query
          name: transactionTypes
          schema:
            type: string
            example: fungible,nft
            enum:
              - fungible
              - nft
              - multitoken
              - native
        - description: The option to filter transaction based on subtype.
          in: query
          name: transactionSubtype
          schema:
            type: string
            example: incoming
            enum:
              - incoming
              - outgoing
              - zero-transfer
        - description: Address of a token (smart contract).
          in: query
          name: tokenAddress
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/TokenAddress"
        - description: ID of a token.
          in: query
          name: tokenId
          required: false
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/TokenId"
        - description: Transactions from this block onwards will be included.
          in: query
          name: blockFrom
          required: false
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/BlockNumber"
        - description: Transactions up to this block will be included.
          in: query
          name: blockTo
          required: false
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/BlockNumberTo"
        - description: The number of items per page (default is 50).
          in: query
          name: pageSize
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/PageSize"
        - description: The offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/Offset"
        - description: >-
            The cursor to obtain previous page or next page of the data.
            Available only for Tezos blockchain.
          in: query
          name: cursor
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/Cursor"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    description: List of all selected transactions.
                    items:
                      $ref: "../../../components/schemas.yml#/components/schemas/TxData"
                    example:
                      - chain: ethereum-mainnet
                        hash: >-
                          0x549447710026cef714da21fb29cbfae1f689bd3246f2fa0a5081149c4aeb3bb3
                        address: "0xdef1c0ded9bec7f1a1670819833240f027b25eff"
                        blockNumber: 16819465
                        transactionIndex: 84
                        transactionType: fungible
                        transactionSubtype: incoming
                        amount: "0.990923706372082143"
                        timestamp: 1678715303000
                        tokenAddress: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                        counterAddress: "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"
                      - chain: ethereum-mainnet
                        hash: >-
                          0x549447710026cef714da21fb29cbfae1f689bd3246f2fa0a5081149c4aeb3bb3
                        address: "0xdef1c0ded9bec7f1a1670819833240f027b25eff"
                        blockNumber: 16819465
                        transactionIndex: 84
                        transactionType: native
                        transactionSubtype: zero-transfer
                        amount: "0"
                        timestamp: 1678715303000
                        counterAddress: "0xd841e3d110cbe4aedb04c9dcc3572ec306bda2f9"
                      - chain: ethereum-mainnet
                        hash: >-
                          0x4e0268c1e67575fd09047e006dd5ad26df402d85fa159e10639e9ea7c2d428f7
                        address: "0x0000000000000000000000000000000000000000"
                        blockNumber: 16819465
                        transactionIndex: 119
                        transactionType: nft
                        transactionSubtype: outgoing
                        amount: "-1"
                        timestamp: 1678715303000
                        tokenId: "33"
                        tokenAddress: "0x3bcad8a734e923133d2c8c3fd4747d47e12d4f79"
                        counterAddress: "0x84300dcc7ca9cf447e886fa17c11fa22557d1af0"
                  prevPage:
                    type: string
                    description: >-
                      Cursor pagination, used to get previous page of results
                      (only relevant for Tezos).
                    example: KtYxNTQ3MHwyNDV8cHJldgs=
                  nextPage:
                    type: string
                    description: >-
                      Cursor pagination, used to get next page of results (only
                      relevant for Tezos).
                    example: MzYxNTQ3MHwyNDV8cHJldg==
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error400"
          description: >-
            Bad Request. Validation failed for the given object in the HTTP Body
            or Request parameters.
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            required perform operation due to logical error or invalid
            permissions.
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error403"
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server during the
            processing of the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Get transactions
      tags:
        - Wallet API

  /v3/data/utxos:
    get:
      description: >
        <p><b>100 credits per API call</b></p>

        <p>Get unspent UTXOs for a specific address up to a specific total
        amount.

        If you want to prepare a transaction on UTXO-based chains like Bitcoin,
        you need to enter unspent UTXOs to be able to perform a transaction. By
        providing ```totalValue``` as a total, our API will return a list of
        UTXOs that will be enough to cover the transaction.</p>

        Our API lets you get the unpenst UTXOs for a specific address on:</p>

        <ul>

        <li>Bitcoin - bitcoin / bitcoin-testnet</li>

        <li>Litecoin - litecoin / litecoin-testnet</li>

        <li>Dogecoin - doge / doge-testnet</li>

        <li>Cardano - cardano / cardano-preprod</li>

        </ul>

        <p>To get started:</p>

        <ul>

        <li>Provide a chain and address you want to list unspent UTXOs for. If
        available, our API will return information about the unspent UTXOs for a
        specific address. API traverses latest 200k incoming transactions.</li>

        </ul>
      operationId: GetUtxosByAddress
      parameters:
        - description: The blockchain to work with.
          in: query
          name: chain
          required: true
          schema:
            $ref: "../../../components/schemas.yml#/components/schemas/ChainUtxoEnum"
        - description: The blockchain address.
          in: query
          name: address
          required: true
          schema:
            type: string
            example: bc1qmfp2r68cde646jv5ns7x2qvah8v5qtfw8gznj2
        - description: >-
            The total amount of transaction you want to send. Only UTXOs up to
            this amount will be returned, so you will not spend more than you
            need.
          in: query
          name: totalValue
          required: true
          schema:
            type: number
            example: 0.0001
            minimum: 0
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                description: >
                  Information about specific collection or token

                  (not all fields are available for every token, e.g. some
                  multitokens do not have name and symbol).
                items:
                  type: object
                  required:
                    - chain
                    - address
                    - txHash
                    - index
                    - value
                    - valueAsString
                  properties:
                    chain:
                      $ref: "../../../components/schemas.yml#/components/schemas/ChainUtxoEnum"
                    address:
                      type: string
                      description: Address of the UTXO
                      example: bc1qmfp2r68cde646jv5ns7x2qvah8v5qtfw8gznj2
                    txHash:
                      type: string
                      description: Hash of the transaction this UTXO is present in
                      example: >-
                        0x1b5b3e8a671434bf5d0d38e3e52dcafac484441a48bfae4a3f71e5b0b3093d8e
                    index:
                      type: number
                      description: Index of the UTXO in the transaction
                      example: 0
                    value:
                      type: number
                      description: Value of the UTXO, in BTC, LTC or DOGE.
                      example: 0.0001
                    valueAsString:
                      type: string
                      description: >-
                        String representation of the value of the UTXO, in BTC,
                        LTC or DOGE.
                      example: "0.0001"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error400"
          description: >-
            Bad Request. Validation failed for the given object in the HTTP Body
            or Request parameters.
        "401":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401NotActive"
                  - $ref: "../../../components/schemas.yml#/components/schemas/Error401Invalid"
          description: >-
            Unauthorized. Not valid or inactive subscription key present in the
            HTTP Header.
        "403":
          description: >-
            Forbidden. The request is authenticated, but it is not possible to
            required perform operation due to logical error or invalid
            permissions.
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error403"
        "500":
          content:
            application/json:
              schema:
                $ref: "../../../components/schemas.yml#/components/schemas/Error500"
          description: >-
            Internal server error. There was an error on the server during the
            processing of the request.
      security:
        - X-API-Key: []
      x-codeSamples: []
      summary: Get unspent UTXOs for an address
      tags:
        - Wallet API

servers:
  - url: https://api.tatum.io/
