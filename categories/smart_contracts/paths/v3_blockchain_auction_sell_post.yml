description: '<p><b>2 credits per API call</b></p>

  <p>Create new auction on the auction contract. Before operation, seller must approve
  spending of the NFT token for the Auction contract using <a href="#operation/ApproveNftAuctionSpending">Approve
  NFT</a>.

  After auction is created, auction contract transfers the asset to the auction smart
  contract.

  Only auction for existing NFTs can be created - seller must be owner of the NFT
  asset.</p>

  <p>This API is supported for the following blockchains:</p>

  <ul>

  <li>BNB Smart Chain</li>

  <li>Celo</li>

  <li>Ethereum</li>

  <li>Harmony</li>

  <li>Klaytn</li>

  <li>Polygon</li>

  </ul>

  <p><b>A known issue on Harmony</b><br/>

  On Harmony, when you are viewing a transaction in the Harmony Blockchain Explorer,
  the transaction status may be displayed as the following:<br/>

  <code>Error reverted:x0</code><br/>

  This is a known issue with the Harmony Blockchain Explorer. This status does not
  mean that the transaction failed. You can safely ignore it.</p>

  <p><b>Signing a transaction</b><br/>

  When selling an asset at the NFT auction, you are charged a fee for the transaction,
  and you must sign the transaction with the private key of the blockchain address
  from which the fee will be deducted.</p>

  <p>Providing the private key in the API is not a secure way of signing transactions,
  because the private key can be stolen or exposed. Your private keys should never
  leave your security perimeter. You should use the private keys only for testing
  a solution you are building on the <b>testnet</b> of a blockchain.</p>

  <p>For signing transactions on the <b>mainnet</b>, we strongly recommend that you
  use the Tatum <a href="https://github.com/tatumio/tatum-kms" target="_blank">Key
  Management System (KMS)</a> and provide the signature ID instead of the private
  key in the API. Alternatively, you can use the <a href="https://github.com/tatumio/tatum-js/tree/v2"
  target="_blank">Tatum JavaScript client</a>.</p>

  '
operationId: CreateAuction
requestBody:
  content:
    application/json:
      schema:
        oneOf:
        - $ref: '../../../components/migrated.yml#/components/schemas/CreateAuction'
        - $ref: '../../../components/migrated.yml#/components/schemas/CreateAuctionKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/CreateAuctionCelo'
        - $ref: '../../../components/migrated.yml#/components/schemas/CreateAuctionCeloKMS'
  required: true
responses:
  '200':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/TransactionHash'
          - $ref: '../../../components/migrated.yml#/components/schemas/SignatureId'
    description: OK
  '400':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error400'
    description: Bad Request. Validation failed for the given object in the HTTP Body
      or Request parameters.
  '401':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401NotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401Invalid'
    description: Unauthorized. Not valid or inactive subscription key present in the
      HTTP Header.
  '403':
    description: Forbidden. The request is authenticated, but it is not possible to
      perform the required operation due to a logical error or invalid permissions.
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403'
  '500':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error500'
    description: Internal server error. There was an error on the server while processing
      the request.
security:
- X-API-Key: []
x-codeSamples: []
summary: Sell an asset at the NFT auction
tags:
- Auction
