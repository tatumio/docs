description: '<p><b>2 credits per API call</b></p>

  <p>Transfer a supply of fungible tokens existing in the smart contract (the <code>contractAddress</code>
  parameter in the request body) to the specified blockchain address (the <code>to</code>
  parameter in the request body).<br/>

  Transferring fungible tokens invokes the <code>transfer()</code> method.</p>

  <p>This API is supported for the following blockchains:</p>

  <ul>

  <li>Algorand</li>

  <li>BNB Smart Chain</li>

  <li>Celo</li>

  <li>Ethereum</li>

  <li>Harmony</li>

  <li>Klaytn</li>

  <li>KuCoin Community Chain</li>

  <li>Polygon</li>

  <li>Solana</li>

  <li>XinFin</li>

  </ul>

  <p><b>Transferring fungible tokens on Algorand</b><br/>

  On Algorand, the recipient has to agree in advance to receive your fungible tokens
  because Algorand charges users for storing the tokens on their addresses, and an
  Algorand blockchain address by default does not receive the tokens unless explicitly
  agreed. Before transferring the fungible tokens, make sure that the recipient <a
  href="https://apidoc.tatum.io/tag/Algorand#operation/AlgorandBlockchainReceiveAsset"
  target="_blank">has agreed to receive the NFT</a> to their address.</p>

  <p><b>Blockchain-specific APIs to transfer fungible tokens</b><br/>

  You can also use blockchain-specific APIs for transferring fungible tokens on the
  following blockchains:

  <ul>

  <li><a href="https://apidoc.tatum.io/tag/BNB-Smart-Chain#operation/BscBlockchainTransfer"
  target="_blank">BNB Smart Chain</a></li>

  <li><a href="https://apidoc.tatum.io/tag/Celo#operation/CeloBlockchainTransfer"
  target="_blank">Celo</a></li>

  <li><a href="https://apidoc.tatum.io/tag/Ethereum#operation/EthBlockchainTransfer"
  target="_blank">Ethereum</a></li>

  <li><a href="https://apidoc.tatum.io/tag/Harmony#operation/OneBlockchainTransfer"
  target="_blank">Harmony</a></li>

  <li><a href="https://apidoc.tatum.io/tag/KuCoin#operation/KcsBlockchainTransfer"
  target="_blank">KuCoin Community Chain</a></li>

  <li><a href="https://apidoc.tatum.io/tag/Polygon#operation/PolygonBlockchainTransfer"
  target="_blank">Polygon</a></li>

  <li><a href="https://apidoc.tatum.io/tag/XinFin#operation/XdcBlockchainTransfer"
  target="_blank">XinFin</a></li>

  </ul>

  <p><b>Signing a transaction</b><br/>

  When transferring fungible tokens, you are charged a fee for the transaction, and
  you must sign the transaction with the private key of the blockchain address from
  which the fee will be deducted.</p>

  <p>Providing the private key in the API is not a secure way of signing transactions,
  because the private key can be stolen or exposed. Your private keys should never
  leave your security perimeter. You should use the private keys only for testing
  a solution you are building on the <b>testnet</b> of a blockchain.</p>

  <p>For signing transactions on the <b>mainnet</b>, we strongly recommend that you
  use the Tatum <a href="https://github.com/tatumio/tatum-kms" target="_blank">Key
  Management System (KMS)</a> and provide the signature ID instead of the private
  key in the API. Alternatively, you can use the <a href="https://github.com/tatumio/tatum-js/tree/v2"
  target="_blank">Tatum JavaScript client</a>.</p>

  '
parameters:
- description: Type of Ethereum testnet. Defaults to Sepolia. Valid only for ETH invocations
    for testnet API Key. For mainnet API Key, this value is ignored.
  in: header
  name: x-testnet-type
  required: false
  schema:
    default: ethereum-sepolia
    type: string
    enum:
    - ethereum-sepolia
operationId: Erc20Transfer
requestBody:
  content:
    application/json:
      schema:
        oneOf:
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferEthErc20'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferSolanaSpl'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferBscBep20'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferCeloErc20Token'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferAlgoErc20'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferKcsEthErc20'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferEthErc20KMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferSolanaSplKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferBscBep20KMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferCeloErc20TokenKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferAlgoErc20KMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/ChainTransferKcsEthErc20KMS'
  required: true
responses:
  '200':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/TransactionHash'
          - $ref: '../../../components/migrated.yml#/components/schemas/SignatureId'
    description: OK
  '400':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error400'
    description: Bad Request. Validation failed for the given object in the HTTP Body
      or Request parameters.
  '401':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401NotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401Invalid'
    description: Unauthorized. Not valid or inactive subscription key present in the
      HTTP Header.
  '403':
    description: Forbidden. The request is authenticated, but it is not possible to
      required perform operation due to logical error or invalid permissions.
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403'
  '500':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error500'
    description: Internal server error. There was an error on the server during the
      processing of the request.
security:
- X-API-Key: []
x-codeSamples: []
summary: Transfer fungible tokens
tags:
- Fungible Tokens (ERC-20 or compatible)
