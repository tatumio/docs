description: '<p><b>100 credits per API call on Flow<br/>

  2 credits per API call on the other blockchains</b></p>

  <p>Destroy an NFT. Burning the NFT transfers it to an un-spendable blockchain address
  that no one can access.</p>

  <p>This API is supported for the following blockchains:</p>

  <ul>

  <li>Algorand</li>

  <li>BNB Smart Chain</li>

  <li>Celo</li>

  <li>Ethereum</li>

  <li>Flow</li>

  <li>Harmony</li>

  <li>Klaytn</li>

  <li>KuCoin Community Chain</li>

  <li>Polygon</li>

  <li>Solana</li>

  <li>TRON</li>

  <li>Tezos</li>

  <li>Horizen Eon</li>

  </ul>

  <p><b>Burning NFTs on Algorand</b><br/>

  You can burn only the NFTs that were minted with the address of the manager account
  specified in the <code>manager</code> parameter in the <a href="#operation/NftMintErc721">minting
  call</a> (see the <code>MintNftExpressAlgorand</code>, <code>MintNftAlgorand</code>,
  and <code>MintNftAlgorandKMS</code> schemas of the request body).</p>

  <p><b>Burning NFTs on Tezos</b><br/>

  You can burn only the NFTs if you are admin or minter of the contract</p>

  <p><b>Signing a transaction</b><br/>

  When burning an NFT, you are charged a fee for the transaction, and you must sign
  the transaction with the private key of the blockchain address from which the fee
  will be deducted.</p>

  <p>Providing the private key in the API is not a secure way of signing transactions,
  because the private key can be stolen or exposed. Your private keys should never
  leave your security perimeter. You should use the private keys only for testing
  a solution you are building on the <b>testnet</b> of a blockchain.</p>

  <p>For signing transactions on the <b>mainnet</b>, we strongly recommend that you
  use the Tatum <a href="https://github.com/tatumio/tatum-kms" target="_blank">Key
  Management System (KMS)</a> and provide the signature ID instead of the private
  key in the API. Alternatively, you can use the <a href="https://github.com/tatumio/tatum-js/tree/v2"
  target="_blank">Tatum JavaScript client</a>.</p>

  '
operationId: NftBurnErc721
parameters:
- description: Type of Ethereum testnet. Defaults to Sepolia. Valid only for ETH invocations
    for testnet API Key. For mainnet API Key, this value is ignored.
  in: header
  name: x-testnet-type
  required: false
  schema:
    default: ethereum-sepolia
    type: string
    enum:
    - ethereum-sepolia
requestBody:
  content:
    application/json:
      schema:
        oneOf:
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNft'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftCelo'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftAlgo'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftTezos'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftKMSCelo'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftTron'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftSolana'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftSolanaKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftKMSTron'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftAlgoKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftFlowPK'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftFlowMnemonic'
        - $ref: '../../../components/migrated.yml#/components/schemas/BurnNftFlowKMS'
  required: true
responses:
  '200':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/TransactionHash'
          - $ref: '../../../components/migrated.yml#/components/schemas/SignatureId'
    description: OK
  '400':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error400'
    description: Bad Request. Validation failed for the given object in the HTTP Body
      or Request parameters.
  '401':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401NotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401Invalid'
    description: Unauthorized. Not valid or inactive subscription key present in the
      HTTP Header.
  '403':
    description: Forbidden. The request is authenticated, but it is not possible to
      required perform operation due to logical error or invalid permissions.
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error403'
  '500':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error500'
    description: Internal server error. There was an error on the server during the
      processing of the request.
security:
- X-API-Key: []
x-codeSamples: []
summary: Burn an NFT
tags:
- NFT (ERC-721 or compatible)
