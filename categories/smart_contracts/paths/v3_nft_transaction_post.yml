description: '<p><b>100 credits per API call on Flow<br/>

  2 credits per API call on the other blockchains</b></p>

  <p>Transfer an NFT from the smart contract (the <code>contractAddress</code> parameter
  in the request body) to the specified blockchain address (the <code>to</code> parameter
  in the request body).</p>

  <p>In one API call, you can transfer only one NFT.</p>

  <p>This API is supported for the following blockchains:</p>

  <ul>

  <li>Algorand</li>

  <li>BNB Smart Chain</li>

  <li>Celo</li>

  <li>Ethereum</li>

  <li>Flow</li>

  <li>Harmony</li>

  <li>Klaytn</li>

  <li>KuCoin Community Chain</li>

  <li>Polygon</li>

  <li>Solana</li>

  <li>TRON</li>

  <li>Tezos</li>

  <li>Horizen Eon</li>

  </ul>

  <p>For Ethereum, Celo, and BNB Smart Chain, transferring NFTs invokes the <code>safeTransfer()</code>
  method.</p>

  <p><b>Transferring NFTs on Algorand</b></p>

  <ul>

  <li>On Algorand, the recipient has to agree in advance to receive your NFT because
  Algorand charges users for storing NFTs on their addresses, and an Algorand blockchain
  address by default does not receive NFTs unless explicitly agreed. Before transferring
  an NFT, make sure that the recipient <a href="https://apidoc.tatum.io/tag/Algorand#operation/AlgorandBlockchainReceiveAsset"
  target="_blank">has agreed to receive the NFT</a> to their address.</li>

  <li>If you want to transfer an NFT that <a href="#operation/NftMintErc721">was minted
  using NFT Express</a>, use the <code>transferNftAlgoExpress</code> schema of the
  request body.<br /><b>NOTE:</b> On the <b>mainnet</b>, Tatum covers your transaction
  fees for the NFT transfer and pays for them from its own blockchain address. Then,
  the fee amount paid by Tatum is converted to the number of credits, and these credits
  are deducted from the monthly credit allowance of your paid pricing plan. On the
  <b>testnet</b>, only one credit is deducted from the monthly credit allowance for
  transaction fee.</li>

  </ul>

  <p><b>Transferring NFTs on Solana</b><br/>

  If you want to transfer an NFT that <a href="#operation/NftMintErc721">was minted
  using NFT Express</a>, use the <code>transferNftSolana</code> or <code>transferNftSolanaKMS</code>
  schema of the request body. In the request body:

  <ul>

  <li>Set the <code>from</code> parameter to the address that you used in the <code>to</code>
  parameter in the request body of the minting call.</li>

  <li>Set the <code>to</code> parameter to the recipient''s address.</li>

  <li>Set the <code>contractAddress</code> parameter to the address from the <code>nftAddress</code>
  parameter returned in the response body of the minting call.</li>

  <li>Set the <code>fromPrivateKey</code>/<code>signatureId</code> parameter to the
  private key/signature ID of the blockchain address that you specified in the <code>from</code>
  parameter.</li>

  </ul>

  <p><b>Signing a transaction</b><br/>

  When transferring an NFT, you are charged a fee for the transaction, and you must
  sign the transaction with the private key of the blockchain address from which the
  fee will be deducted.</p>

  <p>Providing the private key in the API is not a secure way of signing transactions,
  because the private key can be stolen or exposed. Your private keys should never
  leave your security perimeter. You should use the private keys only for testing
  a solution you are building on the <b>testnet</b> of a blockchain.</p>

  <p>For signing transactions on the <b>mainnet</b>, we strongly recommend that you
  use the Tatum <a href="https://github.com/tatumio/tatum-kms" target="_blank">Key
  Management System (KMS)</a> and provide the signature ID instead of the private
  key in the API. Alternatively, you can use the <a href="https://github.com/tatumio/tatum-js/tree/v2"
  target="_blank">Tatum JavaScript client</a>.</p>

  <p><b>NOTE:</b> This does not apply to transferring NFTs that were minted on Algorand
  using NFT Express (see earlier in this section).</p>

  '
operationId: NftTransferErc721
parameters:
- description: Type of Ethereum testnet. Defaults to Sepolia. Valid only for ETH invocations
    for testnet API Key. For mainnet API Key, this value is ignored.
  in: header
  name: x-testnet-type
  required: false
  schema:
    default: ethereum-sepolia
    type: string
    enum:
    - ethereum-sepolia
requestBody:
  content:
    application/json:
      schema:
        oneOf:
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNft'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftCelo'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftTron'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftSolana'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftAlgo'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftAlgoExpress'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftFlowPK'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftFlowMnemonic'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftTezos'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftKMSCelo'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftAlgoKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftSolanaKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftFlowKMS'
        - $ref: '../../../components/migrated.yml#/components/schemas/TransferNftKMSTron'
  required: true
responses:
  '200':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/TransactionHash'
          - $ref: '../../../components/migrated.yml#/components/schemas/SignatureId'
    description: OK
  '400':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error400'
    description: Bad Request. Validation failed for the given object in the HTTP Body
      or Request parameters.
  '401':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401NotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401Invalid'
    description: Unauthorized. Not valid or inactive subscription key present in the
      HTTP Header.
  '403':
    description: Forbidden. The request is authenticated, but it is not possible to
      required perform operation due to logical error or invalid permissions.
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error403'
  '500':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error500'
    description: Internal server error. There was an error on the server during the
      processing of the request.
security:
- X-API-Key: []
x-codeSamples: []
summary: Transfer an NFT
tags:
- NFT (ERC-721 or compatible)
