description: '<p><b>2 credits per API call</b></p>

  <p>Verify an NFT in an NFT collection on Solana. Verifying an NFT sets the <code>Verified</code>
  parameter to <code>true</code> for the NFT, which means that the NFT is really a
  part of the collection. To know more about Solana collections and verification,
  refer to the <a href="https://docs.metaplex.com/programs/token-metadata/certified-collections"
  target="_blank">Solana user documentation</a>.</p>

  <p>The collection must be a sized collection that was introduced in <a href="https://docs.metaplex.com/programs/token-metadata/changelog/v1.3"
  target="_blank">Version 1.3</a> of the Metaplex Token Metadata program. The NFT
  must have been <a href="#operation/NftMintErc721">minted in this collection</a>.</p>

  <p>This API is supported only for Solana.</p>

  <p><b>Signing a transaction</b><br/>

  When verifying an NFT, you are charged a fee for the transaction, and you must sign
  the transaction with the private key of the blockchain address from which the fee
  will be deducted.</p>

  <p>Providing the private key in the API is not a secure way of signing transactions,
  because the private key can be stolen or exposed. Your private keys should never
  leave your security perimeter. You should use the private keys only for testing
  a solution you are building on the <b>testnet</b> of a blockchain.</p>

  <p>For signing transactions on the <b>mainnet</b>, we strongly recommend that you
  use the Tatum <a href="https://github.com/tatumio/tatum-kms" target="_blank">Key
  Management System (KMS)</a> and provide the signature ID instead of the private
  key in the API. Alternatively, you can use the <a href="https://github.com/tatumio/tatum-js/tree/v2"
  target="_blank">Tatum JavaScript client</a>.</p>

  '
operationId: NftVerifyInCollection
requestBody:
  content:
    application/json:
      schema:
        oneOf:
        - $ref: '../../../components/migrated.yml#/components/schemas/VerifySolanaNFT'
        - $ref: '../../../components/migrated.yml#/components/schemas/VerifySolanaNFTKMS'
  required: true
responses:
  '200':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/TransactionHash'
          - $ref: '../../../components/migrated.yml#/components/schemas/SignatureId'
    description: OK
  '400':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error400'
    description: Bad Request. Validation failed for the given object in the HTTP Body
      or Request parameters.
  '401':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401NotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401Invalid'
    description: Unauthorized. Not valid or inactive subscription key present in the
      HTTP Header.
  '403':
    description: Forbidden. The request is authenticated, but it is not possible to
      required perform operation due to logical error or invalid permissions.
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error403'
  '500':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error500'
    description: Internal server error. There was an error on the server during the
      processing of the request.
security:
- X-API-Key: []
x-codeSamples: []
summary: Verify an NFT in an NFT collection on Solana
tags:
- NFT (ERC-721 or compatible)
