description: '<p><b>2 credits per API call</b></p>

  <p>Assign an existing blockchain address to a virtual account. The blockchain address
  becomes a deposit address associated with this account.</br>Use this API when the
  <a href="https://apidoc.tatum.io/tag/Account#operation/createAccount" target="_blank">virtual
  account has no default extended public key</a> (<code>xpub</code>) and deposit addresses
  are handled manually.</p>

  <p>You can assign multiple blockchain addresses to one virtual account. When you
  have multiple blockchain addresses assigned to the same virtual account, you aggregate
  various blockchain transactions from different addresses under a single account.<br/>You
  can deposit funds from another blockchain address to a deposit address associated
  with the virtual account, and the funds will be credited to that virtual account.</p>

  <p><b>Scanning for incoming deposits</b><br/>

  By default, deposit addresses are scanned for incoming deposits. Deposit addresses
  are automatically synchronized with the associated virtual account, and you can
  see incoming deposits on the virtual account.<br/>Scanning deposit addresses for
  incoming deposits consumes <b>20 credits per address per day</b>.</p>

  <p>If you want to be notified about certain events occurring on the deposit addresses,
  <a href="https://apidoc.tatum.io/tag/Notification-subscriptions#operation/createSubscription"
  target="_blank">subscribe for notifications</a>.</p>

  '
operationId: assignAddress
parameters:
- description: The ID of the virtual account to assign a blockchain address to
  in: path
  name: id
  required: true
  schema:
    type: string
    example: 5e68c66581f2ee32bc354087
- description: The blockchain address to assign to the virtual account
  in: path
  name: address
  required: true
  schema:
    type: string
    example: 2MsM67NLa71fHvTUBqNENW15P68nHB2vVXb
- description: Destination tag or memo attribute for XRP or XLM addresses
  in: query
  name: index
  required: false
  schema:
    type: number
    minimum: 1
    example: 1
responses:
  '200':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Address'
    description: OK
  '400':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error400'
    description: Bad Request. Validation failed for the given object in the HTTP Body
      or Request parameters.
  '401':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401NotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401Invalid'
    description: Unauthorized. Not valid or inactive subscription key present in the
      HTTP Header.
  '403':
    description: Forbidden. The request is authenticated, but it is not possible to
      required perform operation due to logical error or invalid permissions.
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AccountNotExists'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AddressXpub'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403OffchainNotSupported'
  '500':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error500'
    description: Internal server error. There was an error on the server while processing
      the request.
security:
- X-API-Key: []
x-codeSamples: []
summary: Assign a blockchain address to a virtual account
tags:
- Blockchain addresses
