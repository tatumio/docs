parameters:
- description: Blockchain to work with
  in: path
  name: chain
  required: true
  schema:
    example: ETH
    type: string
    enum:
    - ETH
    - CELO
    - MATIC
    - KCS
    - BSC
    - ONE
    - XDC
    - KLAY
    - SOL
description: '<h4>2 credits per API call.</h4><br/>

  <p>This is the first step to create a new ERC-20 or ERC-20 equivalent token with
  some supply in a virtual account.<br/>

  <br/>

  <br/>

  This method only creates Tatum Private ledger virtual currency with predefined parameters.
  It will not generate any blockchain smart contract.<br/>

  The whole supply of token is stored in the customer''s newly created account. Then
  it is possible to create new Tatum accounts with token name as account''s currency.<br/>

  Newly created account is frozen until the specific smart contract address is linked
  with the Tatum virtual currency, representing the token.<br/>

  Order of the steps to create smart contract with Tatum private ledger support:

  <ol>

  <li>Register token (this API) - creates a virtual currency within Tatum</li>

  <li><a href="https://apidoc.tatum.io/tag/Fungible-Tokens-(ERC-20-or-compatible)#operation/Erc20Deploy">Deploy
  smart contract</a> - create new smart contract on the blockchain</li>

  <li><a href="#operation/storeTokenAddress">Store smart contract address</a> - link
  newly created smart contract address with Tatum virtual currency - this operation
  enables frozen account and enables ledger synchronization for Tatum accounts</li>

  </ol>

  Blockchain address will be assigned to the virtual account as a deposit address.
  It can be defined via the address explicitly or by using xpub and derivationIndex.

  </p>

  '
operationId: registerErc20Token
requestBody:
  content:
    application/json:
      schema:
        oneOf:
        - $ref: '../../../components/migrated.yml#/components/schemas/Erc20'
        - $ref: '../../../components/migrated.yml#/components/schemas/Erc20Address'
  required: true
responses:
  '200':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Erc20Response'
    description: OK
  '400':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error400'
    description: Bad Request. Validation failed for the given object in the HTTP Body
      or Request parameters.
  '401':
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401NotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error401Invalid'
    description: Unauthorized. Not valid or inactive subscription key present in the
      HTTP Header.
  '403':
    description: Forbidden. The request is authenticated, but it is not possible to
      required perform operation due to logical error or invalid permissions.
    content:
      application/json:
        schema:
          oneOf:
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403Erc20Prefix'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403Erc20XpubBoth'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403Erc20XpubMissing'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403RecipientFormat'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403Erc20NameDuplicate'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403CustomerNotActive'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403VCCreateFailed'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AccountNotExists'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AddressAccountXpubMissing'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AddressAccountXpubUsed'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AddressIndexUsed'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403OffchainNotSupported'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AccountIncompatibleXpubBtc'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AccountAddressGeneral'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403VCNotFound'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AddressUsed'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403AddressXpub'
          - $ref: '../../../components/migrated.yml#/components/schemas/Error403EthErc20Unsupported'
  '500':
    content:
      application/json:
        schema:
          $ref: '../../../components/migrated.yml#/components/schemas/Error500'
    description: Internal server error. There was an error on the server while processing
      the request.
security:
- X-API-Key: []
x-codeSamples: []
summary: Register a new ERC-20 or ERC-20-equivalent token in the virtual account
tags:
- Blockchain operations
