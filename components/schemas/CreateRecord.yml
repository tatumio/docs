type: object
properties:
  data:
    type: string
    minLength: 1
    maxLength: 130000
    description: The data to be stored on the blockchain
    example: My example log data
  chain:
    description: The blockchain to store the data on
    enum:
    - BSC
    - EGLD
    - ETH
    - KLAY
    - MATIC
    - ONE
    - XDC
    example: ETH
    type: string
  fromPrivateKey:
    type: string
    maxLength: 66
    example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
    minLength: 66
    description: The private key of the blockchain address from which the transaction
      will be made and the transaction fee will be deducted
  from:
    type: string
    maxLength: 62
    example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    minLength: 42
    description: (Elrond only; required) The blockchain address from which the transaction
      will be made<br/>This is a mandatory parameter for Elrond. Do not use it with
      any other blockchain.
  to:
    description: The blockchain address to store the data on<br/>If not provided,
      the data will be stored on the address from which the transaction is made.
    example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
    maxLength: 42
    minLength: 42
    type: string
  nonce:
    type: number
    minimum: 0
    description: The nonce to be set to the transaction; if not present, the last
      known nonce will be used
  fromShardID:
    type: number
    minimum: 0
    maximum: 4
    description: (Harmony only) The ID of the shard from which the data should be
      read
  toShardID:
    type: number
    minimum: 0
    maximum: 4
    description: (Harmony only) The ID of the shard to which the data should be recorded
  ethFee:
    description: (Ethereum only) The custom defined fee; if not present, will be calculated
      automatically
    $ref: '../migrated.yml#/components/schemas/CustomFee'
required:
- data
- chain
- fromPrivateKey
