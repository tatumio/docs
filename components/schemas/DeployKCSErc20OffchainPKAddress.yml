type: object
properties:
  symbol:
    description: Name of the ERC20 token - stored as a symbol on Blockchain
    example: MT
    maxLength: 30
    pattern: ^[a-zA-Z0-9_]+$
    minLength: 1
    type: string
  supply:
    description: max supply of ERC20 token.
    maxLength: 38
    example: '10000000'
    pattern: ^[+]?((\d+(\.\d*)?)|(\.\d+))$
    type: string
  description:
    description: Description of the ERC20 token
    example: My ERC20 Token
    maxLength: 100
    minLength: 1
    type: string
  basePair:
    description: Base pair for ERC20 token. 1 token will be equal to 1 unit of base
      pair. Transaction value will be calculated according to this base pair.
    example: EUR
    $ref: '../migrated.yml#/components/schemas/FiatOrCryptoCurrency'
  baseRate:
    type: number
    example: 1
    default: 1
    minimum: 0
    description: Exchange rate of the base pair. Each unit of the created curency
      will represent value of baseRate*1 basePair.
  customer:
    $ref: '../migrated.yml#/components/schemas/CustomerRegistration'
  address:
    description: Address on Ethereum blockchain, where all initial supply will be
      stored. Either xpub and derivationIndex, or address must be present, not both.
    maxLength: 42
    minLength: 42
    example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
    type: string
  privateKey:
    description: Private key of Ethereum account address, from which gas for deployment
      of ERC20 will be paid. Private key, mnemonic or signature Id must be present.
    type: string
    maxLength: 66
    minLength: 66
    example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
  nonce:
    type: number
    description: The nonce to be set to the transaction; if not present, the last
      known nonce will be used
    minimum: 0
required:
- description
- supply
- symbol
- basePair
- privateKey
- address
