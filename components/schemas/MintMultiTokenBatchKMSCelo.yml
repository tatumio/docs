type: object
properties:
  chain:
    type: string
    example: CELO
    description: Chain to work with.
    enum:
    - CELO
  to:
    type: array
    description: The blockchain address to send the Multi Tokens to.
    example:
    - '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
    items:
      maxLength: 42
      minLength: 42
      type: string
  tokenId:
    type: array
    description: The IDs of the Multi Tokens to be created.
    example:
    - - '100000'
      - '100001'
    items:
      type: array
      items:
        type: string
        maxLength: 32
  amounts:
    type: array
    description: The amounts of the Multi Tokens to be created.
    example:
    - - '100'
      - '100'
    items:
      type: array
      items:
        type: string
        maxLength: 32
  data:
    description: Data in bytes
    example: '0x1234'
    type: string
  contractAddress:
    maxLength: 42
    minLength: 42
    description: The address of the Multi Token smart contract
    example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
    type: string
  index:
    type: number
    minimum: 0
    description: If signatureId is mnemonic-based, this is the index to the specific
      address from that mnemonic.
  signatureId:
    type: string
    format: uuid
    example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    description: Identifier of the private key associated in signing application.
      Private key, or signature Id must be present.
  nonce:
    type: number
    minimum: 0
    description: Nonce to be set to Celo transaction. If not present, last known nonce
      will be used.
  feeCurrency:
    type: string
    description: Currency to pay for transaction gas
    enum:
    - CELO
    - CUSD
    - CEUR
  fee:
    $ref: '../migrated.yml#/components/schemas/CustomFee'
required:
- chain
- to
- contractAddress
- feeCurrency
- tokenId
- amounts
- signatureId
