type: object
properties:
  chain:
    description: The blockchain to work with
    enum:
    - TRON
    example: TRON
    type: string
  custodialAddress:
    maxLength: 34
    minLength: 34
    description: The gas pump address that transfers the assets; this is the address
      that you <a href="#operation/PrecalculateGasPumpAddresses">precalculated</a>
      and <a href="#operation/ActivateGasPumpAddresses">activated</a> earlier and
      that is assigned to a customer in your custodial application; this is not the
      "master address"
    example: TYMwiDu22V6XG3yk6W9cTVBz48okKLRczh
    type: string
  recipient:
    type: array
    description: The blockchain address that receives the assets
    items:
      maxLength: 34
      minLength: 34
      example: TYMcTVBz48okKLRczhwiDu22V6XG3yk6W9
      type: string
  contractType:
    type: array
    description: The type of the assets to transfer. Set <code>0</code> for fungible
      tokens (ERC-20 or equivalent), <code>1</code> for NFTs (ERC-721 or equivalent),
      or <code>3</code> for native blockchain currencies.
    items:
      type: number
      example: 0
      enum:
      - 0
      - 1
      - 3
  tokenAddress:
    type: array
    description: '<ul>

      <li>

      If the assets are fungible tokens or NFTs, set this parameter to the array of
      the addresses of the tokens to transfer:<br/>

      <code>"tokenAddress": ["0x782919AFc85eEA2cB736874225456bB5d3e242bA","0x74225456bB5d3e242bA782919AFc85eEA2cB7368",...,"0x3e242bA78274225456bB52cB7368d919AFc85eEA"]</code>

      </li>

      <li>

      If the assets are a native blockchain currency, set this parameter to the array
      of zeros, a zero per currency:<br/>

      <code>"tokenAddress": ["0","0",...,"0"]</code>

      </li>

      </ul>

      '
    items:
      maxLength: 34
      minLength: 34
      example: TYMG3ykLRczh6W9cTVBz48wiDu22V6XokK
      type: string
  amount:
    type: array
    description: '<ul>

      <li>

      If the assets are fungible tokens or a native blockchain currency, set this
      parameter to the array of the amounts of the assets to transfer:<br/>

      <code>"amount": ["100000","15000",...,"250000"]</code>

      </li>

      <li>

      If the assets are NFTs, set this parameter to the array of zeros, a zero per
      NFT:<br/>

      <code>"amount": ["0","0",...,"0"]</code>

      </li>

      </ul>

      '
    items:
      example: '100000'
      pattern: ^[+]?((\d+(\.\d*)?)|(\.\d+))$
      type: string
  tokenId:
    type: array
    description: "<ul>\n<li>\nIf the assets are NFTs, set this parameter to the array\
      \ of the IDs of the tokens to transfer:<br/>\n<code>\"tokenId\": [\"12\",\"\
      13\",...,\"24\"]</code>\n </li>\n<li>\nIf the assets are fungible tokens or\
      \ a native blockchain currency, set this parameter to the array of zeros, a\
      \ zero per fungible token/currency:<br/>\n<code>\"tokenId\": [\"0\",\"0\",...,\"\
      0\"]</code>\n</li>\n</ul>\n"
    items:
      example: '100000'
      type: string
      maxLength: 256
  fromPrivateKey:
    type: string
    maxLength: 64
    example: 05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2648ce5080c2
    minLength: 64
    description: The private key of the blockchain address that owns the gas pump
      address ("master address")
  feeLimit:
    type: number
    minimum: 0
    description: The maximum amount to be paid as the gas fee (in TRX)
    example: 10
required:
- custodialAddress
- chain
- contractType
- tokenAddress
- amount
- tokenId
- feeLimit
- recipient
- fromPrivateKey
